// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CoursesColumns holds the columns for the "courses" table.
	CoursesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString},
	}
	// CoursesTable holds the schema information for the "courses" table.
	CoursesTable = &schema.Table{
		Name:       "courses",
		Columns:    CoursesColumns,
		PrimaryKey: []*schema.Column{CoursesColumns[0]},
	}
	// LessonsColumns holds the columns for the "lessons" table.
	LessonsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString},
		{Name: "course_lessons", Type: field.TypeUUID, Nullable: true},
	}
	// LessonsTable holds the schema information for the "lessons" table.
	LessonsTable = &schema.Table{
		Name:       "lessons",
		Columns:    LessonsColumns,
		PrimaryKey: []*schema.Column{LessonsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "lessons_courses_lessons",
				Columns:    []*schema.Column{LessonsColumns[2]},
				RefColumns: []*schema.Column{CoursesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// StudentsColumns holds the columns for the "students" table.
	StudentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "first_name", Type: field.TypeString, Default: "unknown"},
		{Name: "last_name", Type: field.TypeString, Default: "unknown"},
	}
	// StudentsTable holds the schema information for the "students" table.
	StudentsTable = &schema.Table{
		Name:       "students",
		Columns:    StudentsColumns,
		PrimaryKey: []*schema.Column{StudentsColumns[0]},
	}
	// TeachersColumns holds the columns for the "teachers" table.
	TeachersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "first_name", Type: field.TypeString, Default: "unknown"},
		{Name: "last_name", Type: field.TypeString, Default: "unknown"},
	}
	// TeachersTable holds the schema information for the "teachers" table.
	TeachersTable = &schema.Table{
		Name:       "teachers",
		Columns:    TeachersColumns,
		PrimaryKey: []*schema.Column{TeachersColumns[0]},
	}
	// StudentCoursesColumns holds the columns for the "student_courses" table.
	StudentCoursesColumns = []*schema.Column{
		{Name: "student_id", Type: field.TypeUUID},
		{Name: "course_id", Type: field.TypeUUID},
	}
	// StudentCoursesTable holds the schema information for the "student_courses" table.
	StudentCoursesTable = &schema.Table{
		Name:       "student_courses",
		Columns:    StudentCoursesColumns,
		PrimaryKey: []*schema.Column{StudentCoursesColumns[0], StudentCoursesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "student_courses_student_id",
				Columns:    []*schema.Column{StudentCoursesColumns[0]},
				RefColumns: []*schema.Column{StudentsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "student_courses_course_id",
				Columns:    []*schema.Column{StudentCoursesColumns[1]},
				RefColumns: []*schema.Column{CoursesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// TeacherCoursesColumns holds the columns for the "teacher_courses" table.
	TeacherCoursesColumns = []*schema.Column{
		{Name: "teacher_id", Type: field.TypeUUID},
		{Name: "course_id", Type: field.TypeUUID},
	}
	// TeacherCoursesTable holds the schema information for the "teacher_courses" table.
	TeacherCoursesTable = &schema.Table{
		Name:       "teacher_courses",
		Columns:    TeacherCoursesColumns,
		PrimaryKey: []*schema.Column{TeacherCoursesColumns[0], TeacherCoursesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "teacher_courses_teacher_id",
				Columns:    []*schema.Column{TeacherCoursesColumns[0]},
				RefColumns: []*schema.Column{TeachersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "teacher_courses_course_id",
				Columns:    []*schema.Column{TeacherCoursesColumns[1]},
				RefColumns: []*schema.Column{CoursesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CoursesTable,
		LessonsTable,
		StudentsTable,
		TeachersTable,
		StudentCoursesTable,
		TeacherCoursesTable,
	}
)

func init() {
	LessonsTable.ForeignKeys[0].RefTable = CoursesTable
	StudentCoursesTable.ForeignKeys[0].RefTable = StudentsTable
	StudentCoursesTable.ForeignKeys[1].RefTable = CoursesTable
	TeacherCoursesTable.ForeignKeys[0].RefTable = TeachersTable
	TeacherCoursesTable.ForeignKeys[1].RefTable = CoursesTable
}
